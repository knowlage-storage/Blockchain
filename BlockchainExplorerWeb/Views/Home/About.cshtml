@{
    ViewBag.Title = "О программе";
}
<h2>@ViewBag.Title Blockchain Explorer Web</h2>

<h3>Общее описание</h3>
<p>
    Blockchain Explorer Web это веб-приложение позволяющее выполнять просмотр содержимого хранилища информации на базе технологии блокчейн, а также вносить новые данные в систему.
    Блокчейн — выстроенная по определённым правилам непрерывная последовательная цепочка блоков (связный список), содержащих информацию. 
    Чаще всего копии цепочек блоков хранятся на множестве разных компьютеров независимо друг от друга.
</p>

<h3>Структура проекта</h3>
<p>
    Исходный код программы доступен в репозитории github по ссылке.
    Решение Blockchain включает в себя несколько проектов:
    1. Blockchain - основная библиотека реализующая логику работы приложения.
    2. BlockchainData - библиотека реализующее работу хранилищем данных приложения.
    3. BlockchainExplorerDesktop - Windows Form приложение, позволяющее работать с локальной службой Blockchain.
    4. BlockchainExplorerWeb - веб-приложение, позволяющее работать со службой Blockchain расположеной в сети интернет.
    5. BlockchainService - WCF-служба для работы с системой Blockchain.
    6. BlockchainTests - модульные тесты к решению blockchain.
</p>

<h3>Описание проекта</h3>
<p>
    Данный проект реализует основную логику работы приложения.
    Для реализации цепочки блоков используется класс Chain, который позволяет выполнять хеширование данных с помощью одного из алгоритмов хеширования. 
    На данный момент в системе используется алгоритм SHA256, но предусмотрена возможность быстрого добавления других алгоритмов.
    Для хранения информации используется MS SQL сервер, но также как и с алгоритмоми хеширования, предусмотрена возможность быстрой замены хранилища данных.
    Цепочка хранит в себе набор связанных блоков. Особенностью данной реализации цепочки является то, что она хранит в себе всю необходимую системную информацию,
    такую как информацию о серверах используемых в сети, и информацию о пользователях системы. Доступ к специализированным системным записям предоставлен 
    через специальные списки, для удобного и быстрого доступа.
    Система способна как создавать новую цепочку блоков, при отсутствии внешних источников подключения, так и получать существующую цепочку из глобальной сети.
    При первом включении система постарается подключится к глобальной сети блокчейн и синхронизовать данные с ней. В дальнейшем данные будут добавляться 
    как в локальное хранилище сети, так и рассылаться по всей глобавльной сети.
    Добавление данных выполняется в единую цепочку блоков с указанием типа блока. Предусмотрена возможность быстрого расширения количества типов блоков.
    Взаимодействие между службами осуществяется через запросы к API службы.
</p>
<p>
    Блок данных включает в себя следующую информацию: Версия протокола блока (пока всегда равно единице), Дату создания блока, Хеш блока, Хеш предыдущего блока,
    Информационные данные хранимые в блоке и информацию о пользователе создавшем блок. Данные представляют собой сериализованную в формате json информацию,
    добавленную пользователем в текстовом формате, либо данные о сервере блокчейн, либо сведения о пользователе. Тип блока задается с помощью специального свойства.
    Предоставляется удобный интерфейс сериализации и десериализации данных. Значимыми данными являются информация и ее тип.
    Пользователь сореджит в себе логин и зашифрованный пароль пользователя, а также его права доступа. Данные о пользователе также хранятся с сериализованном виде.
</p>
<p>
    Данные хранятся при помощи MS SQL сервера. Для взаимодействия с базой данных используется ORM фреймавокр EntityFramework 6. Используется подход Code First, что 
    позволяет автоматически создавать необходимое локальное хранилище данных localdb. При также возможно использование полноценного сервера. 
    Настройка производится в файле app.config. Интересной особенностью данного решения является доработка функционала ef, благодаря которой с помощью специального 
    атрибута можно задать формат возвращаемой даты и времени (utc или местное). 
    Имеется возможность получения всех блоков, добавление нового блока, или очистка всего хранилища.
</p>
<p>
    Desktop explorer подключается к локальной службе блокчейн с помощью сервиса и предоставляет возможность получения всех блоков, 
    просмотра содержимого конкретного блока, а также добавление новых данных в блокчейн. Взаимодествие с сервисом выполняется асинхронно, что 
    позволяет форме не зависать во время обработки информации. Web explorer предоставляет аналогичные возможности, но взаимодествует с глобальной службой
    через специально разработанные api интерфейс. Взаимодействие осуществяется с помощью get запросов. 
</p>
<p>
    Служба предоставляеет четыре метода взаимодействия:
    1. AddHost - запрос на добавление сервера службы блокчейн.
    2. AddUser - запрос на добавление пользователя.
    3. AddData - запрос на добавление данных.
    4. Login - запрос на авторизацию.
    5. GetChain - получение всех блоков.

    Все запросы работаю асинхронно. Внутри службы существует единственный экземпляр цепочки блоков, предоставляющий потокобезопасный доступ. Как уже упоминалось ранее 
    предоставляются два интерфейса доступа, как к службе, так и с помощью web api. Глобальная служба размещена в Azure.
</p>
<h3>Доступ к глобальной службе</h3>
<p>
    http://blockchain-dev-as.azurewebsites.net/ - основной адрес.
    http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/AddHost/{ip} - добавление хоста.
    http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/AddUser/{login}&{password}&{role} - добавление пользователя.
    http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/AddData/{text} - добавление данных.
    http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/Login/{login}&{password} - авторизация пользователя.
    http://blockchain-dev-as.azurewebsites.net/BlockchainService.svc/api/GetChain/ - получение всех блоков.

    Web Explorer
</p>